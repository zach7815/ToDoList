{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/todo-app-main/task-app/src/components/TaskInput.jsx\";\nimport React from 'react';\nimport { UseFetch } from './useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = _ref => {\n  let {\n    inputText,\n    setInputText,\n    newItem,\n    setNewItem,\n    darkMode\n  } = _ref;\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  };\n  const handleSubmit = e => {\n    const item = {\n      id: Math.random() * 1000,\n      text: inputText,\n      complete: false\n    };\n    e.preventDefault();\n    setNewItem([...newItem, item]);\n    setInputText('');\n    UseFetch(\"/api/addOne\", \"POST\", Item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"inputWrap\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `itemInput ${darkMode === true ? 'darkmodeContent' : 'lightmodeContent'}`,\n      value: inputText,\n      onChange: inputTextHandler,\n      type: \"text\",\n      placeholder: \"Create a new todo...\",\n      maxLength: \"50\",\n      label: \"write a \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskInput;\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","UseFetch","TaskInput","inputText","setInputText","newItem","setNewItem","darkMode","inputTextHandler","e","target","value","handleSubmit","item","id","Math","random","text","complete","preventDefault","Item"],"sources":["/Users/Zach/Desktop/todo-app-main/task-app/src/components/TaskInput.jsx"],"sourcesContent":["import React from 'react';\nimport { UseFetch } from './useFetch';\n\nconst TaskInput= ({inputText, setInputText, newItem, setNewItem, darkMode})=>{\n\n const inputTextHandler = (e)=>{\n    setInputText(e.target.value);\n }\n\nconst handleSubmit= (e)=>{\n\n    const item =  {\n        id:Math.random()*1000,\n        text:inputText,\n        complete:false\n    }\n\n    e.preventDefault()\n    setNewItem([...newItem,item\n\n    ])\n    setInputText('')\n    UseFetch(\"/api/addOne\", \"POST\", Item)\n}\n\n\n    return (\n        <form   onSubmit={handleSubmit} className=\"inputWrap\">\n        {/* <label className=\"inputWrap\"> write a task */}\n        <input\n         className={`itemInput ${darkMode===true?'darkmodeContent':'lightmodeContent'}`}\n         value={inputText}\n         onChange={inputTextHandler}\n          type=\"text\"\n          placeholder=\"Create a new todo...\"\n          maxLength=\"50\"\n            label=\"write a \"\n          />\n          {/* </label> */}\n        </form>\n    )\n}\n\nexport default TaskInput;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AAAC;AAEtC,MAAMC,SAAS,GAAE,QAA4D;EAAA,IAA3D;IAACC,SAAS;IAAEC,YAAY;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EAEzE,MAAMC,gBAAgB,GAAIC,CAAC,IAAG;IAC3BL,YAAY,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAEF,MAAMC,YAAY,GAAGH,CAAC,IAAG;IAErB,MAAMI,IAAI,GAAI;MACVC,EAAE,EAACC,IAAI,CAACC,MAAM,EAAE,GAAC,IAAI;MACrBC,IAAI,EAACd,SAAS;MACde,QAAQ,EAAC;IACb,CAAC;IAEDT,CAAC,CAACU,cAAc,EAAE;IAClBb,UAAU,CAAC,CAAC,GAAGD,OAAO,EAACQ,IAAI,CAE1B,CAAC;IACFT,YAAY,CAAC,EAAE,CAAC;IAChBH,QAAQ,CAAC,aAAa,EAAE,MAAM,EAAEmB,IAAI,CAAC;EACzC,CAAC;EAGG,oBACI;IAAQ,QAAQ,EAAER,YAAa;IAAC,SAAS,EAAC,WAAW;IAAA,uBAErD;MACC,SAAS,EAAG,aAAYL,QAAQ,KAAG,IAAI,GAAC,iBAAiB,GAAC,kBAAmB,EAAE;MAC/E,KAAK,EAAEJ,SAAU;MACjB,QAAQ,EAAEK,gBAAiB;MAC1B,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,sBAAsB;MAClC,SAAS,EAAC,IAAI;MACZ,KAAK,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA;EAChB;IAAA;IAAA;IAAA;EAAA,QAEG;AAEf,CAAC;AAAA,KAtCKN,SAAS;AAwCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}