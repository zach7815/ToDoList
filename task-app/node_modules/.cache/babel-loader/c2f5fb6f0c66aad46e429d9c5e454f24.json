{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/todo-app-main/task-app/src/components/Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import bgToggle from './bgToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  // useEffect(()=>{\n  //     const body = document.body\n  //     const toggle = document.querySelector('.toggle-inner')\n\n  //     // If dark mode is enabled - adds classes to update dark-mode styling.\n  //     // Else, removes and styling is as normal.\n  //     if( darkMode === true ) {\n  //       body.classList.add('dark-mode')\n  //       toggle.classList.add('toggle-active')\n  //     } else {\n  //       body.classList.remove('dark-mode')\n  //       toggle.classList.remove('toggle-active')\n  //     }\n\n  // }, [darkMode])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100\",\n          height: \"100\",\n          version: \"1.1\",\n          id: \"Layer_1\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          x: \"0px\",\n          y: \"0px\",\n          viewBox: \"0 0 27.2 32.6\",\n          \"enable-background\": \"new 0 0 27.2 32.6\",\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7.9,22.1L4.7,32H0.5L11.2,0.6H16L26.8,32h-4.3l-3.4-9.9H7.9z M18.2,18.9l-3.1-9c-0.7-2-1.2-3.9-1.6-5.7h-0.1 c-0.5,1.9-1,3.8-1.6,5.7l-3.1,9.1H18.2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 4\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Create a new todo...\",\n        maxLength: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"innerCircle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"U9cQrERlY+h8pHe8i/lj95QawrI=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Header","darkMode","setDarkMode"],"sources":["/Users/Zach/Desktop/todo-app-main/task-app/src/components/Header.jsx"],"sourcesContent":["import React, {useEffect,useState} from 'react';\n// import bgToggle from './bgToggle';\n\n\n\n\nconst Header = ()=>{\nconst [darkMode, setDarkMode]=useState(true);\n// useEffect(()=>{\n//     const body = document.body\n//     const toggle = document.querySelector('.toggle-inner')\n\n//     // If dark mode is enabled - adds classes to update dark-mode styling.\n//     // Else, removes and styling is as normal.\n//     if( darkMode === true ) {\n//       body.classList.add('dark-mode')\n//       toggle.classList.add('toggle-active')\n//     } else {\n//       body.classList.remove('dark-mode')\n//       toggle.classList.remove('toggle-active')\n//     }\n\n// }, [darkMode])\n\n    return (\n        <div className=\"header\">\n        <div className='heading'>\n        <h1>to do</h1>\n        <a><svg width=\"100\" height=\"100\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\" viewBox=\"0 0 27.2 32.6\" enable-background=\"new 0 0 27.2 32.6\">\n<g><path d=\"M7.9,22.1L4.7,32H0.5L11.2,0.6H16L26.8,32h-4.3l-3.4-9.9H7.9z M18.2,18.9l-3.1-9c-0.7-2-1.2-3.9-1.6-5.7h-0.1 c-0.5,1.9-1,3.8-1.6,5.7l-3.1,9.1H18.2z\"/></g>\n</svg></a>\n\n\n        </div>\n        <div className='inputWrap'>\n        < input type=\"text\" placeholder=\"Create a new todo...\" maxLength=\"50\"/>\n\n        <span className=\"innerCircle\"></span>\n        </div>\n        </div>\n    )\n}\n\nexport default Header"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC/C;AAAA;AAKA,MAAMC,MAAM,GAAG,MAAI;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACH,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEI,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACvB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd;QAAA,uBAAG;UAAK,KAAK,EAAC,KAAK;UAAC,MAAM,EAAC,KAAK;UAAC,OAAO,EAAC,KAAK;UAAC,EAAE,EAAC,SAAS;UAAC,KAAK,EAAC,4BAA4B;UAAE,CAAC,EAAC,KAAK;UAAC,CAAC,EAAC,KAAK;UAAC,OAAO,EAAC,eAAe;UAAC,qBAAkB,mBAAmB;UAAA,uBACrL;YAAA,uBAAG;cAAM,CAAC,EAAC;YAAkJ;cAAA;cAAA;cAAA;YAAA;UAAE;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA;MAC7J;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAGI,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,wBAC1B;QAAQ,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,sBAAsB;QAAC,SAAS,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE,eAEvE;QAAM,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAnCKC,MAAM;AAAA,KAANA,MAAM;AAqCZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}