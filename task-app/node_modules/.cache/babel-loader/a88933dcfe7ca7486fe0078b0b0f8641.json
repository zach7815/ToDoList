{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/todo-app-main/task-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Attribution from './components/Attribution';\nimport ListContainer from './components/ListContainer';\nimport ToggleState from './components/ToggleState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [toDoList, setToDoList] = useState([]);\n  const [status, setStatus] = useState(\"All\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case \"Completed\":\n          setFilteredTodos(toDoList.filter(toDo => toDo.complete === true));\n          break;\n        case \"Active\":\n          setFilteredTodos(toDoList.filter(toDo => toDo.complete !== true));\n          break;\n        case \"Clear Completed\":\n          break;\n        default:\n          setFilteredTodos(toDoList);\n          break;\n      }\n    };\n    filterHandler();\n  }, [toDoList, status, setToDoList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      inputText: inputText,\n      setInputText: setInputText,\n      data: toDoList,\n      updateData: setToDoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ListContainer, {\n      toDo: toDoList,\n      filteredToDos: filteredTodos,\n      setToDo: setToDoList,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ToggleState, {\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Attribution, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ElSEGePeBDqTCxbAe5Q2xF+lKx8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Attribution","ListContainer","ToggleState","App","inputText","setInputText","toDoList","setToDoList","status","setStatus","filteredTodos","setFilteredTodos","filterHandler","filter","toDo","complete"],"sources":["/Users/Zach/Desktop/todo-app-main/task-app/src/App.js"],"sourcesContent":["import './App.scss';\nimport React, {useState,useEffect} from 'react';\nimport Header from './components/Header';\nimport Attribution from './components/Attribution';\nimport ListContainer from './components/ListContainer';\nimport ToggleState from './components/ToggleState';\n\n\n\nfunction App() {\n  const [inputText, setInputText]=useState(\"\");\n  const [toDoList,setToDoList]= useState([]);\n  const [status, setStatus]=useState(\"All\")\n  const [filteredTodos, setFilteredTodos]= useState([])\n\n\n\n\n\n\n  useEffect(()=>{\n    const filterHandler = ()=>{\n\n\n      switch(status){\n\n        case \"Completed\":\n          setFilteredTodos(toDoList.filter(toDo=>toDo.complete===true))\n          break\n\n\n          case \"Active\":\n            setFilteredTodos(toDoList.filter(toDo=>toDo.complete!==true))\n            break\n\n            case \"Clear Completed\":\n\n\n                  break\n\n          default:\n            setFilteredTodos(toDoList)\n          break\n      }\n\n    }\n    filterHandler();\n     }, [toDoList,status, setToDoList])\n\n  return (\n    <div className=\"App\">\n<Header inputText={inputText} setInputText={setInputText} data={toDoList} updateData={setToDoList}/>\n<ListContainer toDo={toDoList} filteredToDos={filteredTodos} setToDo={setToDoList}  setStatus={setStatus}/>\n<ToggleState   setStatus={setStatus}/>\n\n\n<Attribution/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAInD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAACC,WAAW,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAACZ,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAEd,QAAQ,CAAC,EAAE,CAAC;EAOrDC,SAAS,CAAC,MAAI;IACZ,MAAMc,aAAa,GAAG,MAAI;MAGxB,QAAOJ,MAAM;QAEX,KAAK,WAAW;UACdG,gBAAgB,CAACL,QAAQ,CAACO,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,QAAQ,KAAG,IAAI,CAAC,CAAC;UAC7D;QAGA,KAAK,QAAQ;UACXJ,gBAAgB,CAACL,QAAQ,CAACO,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,QAAQ,KAAG,IAAI,CAAC,CAAC;UAC7D;QAEA,KAAK,iBAAiB;UAGhB;QAER;UACEJ,gBAAgB,CAACL,QAAQ,CAAC;UAC5B;MAAK;IAGX,CAAC;IACDM,aAAa,EAAE;EACd,CAAC,EAAE,CAACN,QAAQ,EAACE,MAAM,EAAED,WAAW,CAAC,CAAC;EAErC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACxB,QAAC,MAAM;MAAC,SAAS,EAAEH,SAAU;MAAC,YAAY,EAAEC,YAAa;MAAC,IAAI,EAAEC,QAAS;MAAC,UAAU,EAAEC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE,eACpG,QAAC,aAAa;MAAC,IAAI,EAAED,QAAS;MAAC,aAAa,EAAEI,aAAc;MAAC,OAAO,EAAEH,WAAY;MAAE,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3G,QAAC,WAAW;MAAG,SAAS,EAAEA;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAGtC,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAlDQN,GAAG;AAAA,KAAHA,GAAG;AAoDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}