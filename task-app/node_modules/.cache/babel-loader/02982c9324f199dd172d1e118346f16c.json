{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/todo-app-main/task-app/src/components/Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ReactComponent as ReactLogo } from '../images/icon-moon.svg';\nimport darkImage from \"../images/bg-desktop-dark.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  useEffect(() => {\n    const body = document.body;\n    const items = document.querySelectorAll(\".item\");\n    const deskToggle = document.querySelector(\".deskToggle\");\n    const input = document.querySelector(\"input.itemInput\");\n    const itemCount = document.querySelector(\".itemCount\");\n    const toggle = document.querySelector(\".Toggles\");\n    const attribute = document.querySelector(\".attribution\");\n    const bgImage = document.querySelector('.header');\n\n    // If dark mode is enabled - adds classes to update dark-mode styling.\n    // Else, removes and styling is as normal.\n    if (darkMode === true) {\n      body.classList.add('darkModeBody');\n      deskToggle.classList.add(\"darkmodeContent\");\n      itemCount.classList.add(\"darkmodeContent\");\n      toggle.classList.add(\"toggleDark\");\n      input.classList.add(\"darkmodeInput\");\n      attribute.classList.add(\"toggleDark\");\n      // bgImage.style.backgroundImage=`url('http://localhost:3000/static/media/bg-desktop-dark.73e47dbb723ebc772ef0.jpg')`\n      console.log(darkImage);\n      items.forEach(element => {\n        element.classList.add(\"darkmodeContent\");\n      });\n    } else {\n      body.classList.remove('darkModeBody');\n      input.classList.remove(\"darkmodeInput\");\n      deskToggle.classList.remove(\"darkmodeContent\");\n      input.classList.remove(\"darkmodeContent\");\n      itemCount.classList.remove(\"darkmodeContent\");\n      toggle.classList.remove(\"toggleDark\");\n      attribute.classList.remove(\"toggleDark\");\n      items.forEach(element => {\n        element.classList.remove(\"darkmodeContent\");\n      });\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"null\",\n        className: \".icon\",\n        onClick: e => {\n          e.preventDefault();\n          darkMode === false ? setDarkMode(true) : setDarkMode(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"itemInput\",\n        type: \"text\",\n        placeholder: \"Create a new todo...\",\n        maxLength: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"innerCircle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"Ejy9vPVyQHNoZPLjZpLQT0WIFpc=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","ReactLogo","darkImage","Header","darkMode","setDarkMode","body","document","items","querySelectorAll","deskToggle","querySelector","input","itemCount","toggle","attribute","bgImage","classList","add","console","log","forEach","element","remove","e","preventDefault"],"sources":["/Users/Zach/Desktop/todo-app-main/task-app/src/components/Header.jsx"],"sourcesContent":["import React, {useEffect,useState} from 'react';\nimport {ReactComponent as ReactLogo} from '../images/icon-moon.svg';\nimport darkImage from \"../images/bg-desktop-dark.jpg\"\n\n\n\nconst Header = ()=>{\nconst [darkMode, setDarkMode]=useState(true);\nuseEffect(()=>{\n    const body = document.body\n    const items=document.querySelectorAll(\".item\");\n    const deskToggle= document.querySelector(\".deskToggle\");\n    const input= document.querySelector(\"input.itemInput\");\n    const itemCount =document.querySelector(\".itemCount\");\n    const toggle =document.querySelector(\".Toggles\");\n    const attribute=document.querySelector(\".attribution\");\n    const bgImage = document.querySelector('.header');\n\n    // If dark mode is enabled - adds classes to update dark-mode styling.\n    // Else, removes and styling is as normal.\n    if( darkMode === true ) {\n      body.classList.add('darkModeBody')\n      deskToggle.classList.add(\"darkmodeContent\");\n      itemCount.classList.add(\"darkmodeContent\");\n      toggle.classList.add(\"toggleDark\");\n      input.classList.add(\"darkmodeInput\");\n      attribute.classList.add(\"toggleDark\");\n      // bgImage.style.backgroundImage=`url('http://localhost:3000/static/media/bg-desktop-dark.73e47dbb723ebc772ef0.jpg')`\n    console.log(darkImage)\n\n\n      items.forEach(element => {\n        element.classList.add(\"darkmodeContent\");\n      });\n\n    } else {\n      body.classList.remove('darkModeBody');\n      input.classList.remove(\"darkmodeInput\");\n      deskToggle.classList.remove(\"darkmodeContent\");\n      input.classList.remove(\"darkmodeContent\");\n      itemCount.classList.remove(\"darkmodeContent\");\n      toggle.classList.remove(\"toggleDark\");\n      attribute.classList.remove(\"toggleDark\");\n\n      items.forEach(element => {\n        element.classList.remove(\"darkmodeContent\");\n      });\n\n    }\n\n}, [darkMode])\n\n    return (\n        <div className=\"header\">\n        <div className='heading'>\n        <h1>to do</h1>\n        <a href='null'\n         className='.icon'\n         onClick={(e)=>{\n            e.preventDefault();\n            darkMode === false ? setDarkMode(true) : setDarkMode(false)\n            }}\n         >\n        <ReactLogo/>\n        </a>\n        </div>\n        <div className='inputWrap'>\n        <input className='itemInput' type=\"text\" placeholder=\"Create a new todo...\" maxLength=\"50\"/>\n\n        <span className=\"innerCircle\"></span>\n        </div>\n        </div>\n    )\n}\n\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module"}