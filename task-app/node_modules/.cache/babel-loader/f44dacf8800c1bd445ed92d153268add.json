{"ast":null,"code":"var _jsxFileName = \"/Users/Zach/Desktop/todo-app-main/task-app/src/components/Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ReactComponent as ReactLogoMoon } from '../images/icon-moon.svg';\nimport { ReactComponent as ReactLogoSun } from '../images/icon-sun.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  // useEffect(()=>{\n  //     const body = document.body\n  //     const items=document.querySelectorAll(\".item\");\n  //     const deskToggle= document.querySelector(\".deskToggle\");\n  //     const input= document.querySelector(\"input.itemInput\");\n  //     const itemCount =document.querySelector(\".itemCount\");\n  //     const toggle =document.querySelector(\".Toggles\");\n  //     const attribute=document.querySelector(\".attribution\");\n  //     const bgImage = document.querySelector('.header');\n\n  //     if( darkMode === true ) {\n  //       body.classList.add('darkModeBody')\n  //       deskToggle.classList.add(\"darkmodeContent\");\n  //       itemCount.classList.add(\"darkmodeContent\");\n  //       toggle.classList.add(\"toggleDark\");\n  //       input.classList.add(\"darkmodeInput\");\n  //       attribute.classList.add(\"toggleDark\");\n  //       bgImage.style.backgroundImage=`url('http://localhost:3000/static/media/bg-desktop-dark.73e47dbb723ebc772ef0.jpg')`\n  //       items.forEach(element => {\n  //         element.classList.add(\"darkmodeContent\");\n  //       });\n\n  //     } else {\n  //       body.classList.remove('darkModeBody');\n  //       input.classList.remove(\"darkmodeInput\");\n  //       deskToggle.classList.remove(\"darkmodeContent\");\n  //       input.classList.remove(\"darkmodeContent\");\n  //       itemCount.classList.remove(\"darkmodeContent\");\n  //       toggle.classList.remove(\"toggleDark\");\n  //       attribute.classList.remove(\"toggleDark\");\n  //       bgImage.style.backgroundImage=`url('http://localhost:3000/static/media/bg-desktop-light.3508d620efd5a52bb4ce.jpg')`;\n  //       items.forEach(element => {\n  //         element.classList.remove(\"darkmodeContent\");\n  //       });\n\n  //     }\n\n  // }, [darkMode])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"null\",\n        className: \".icon\",\n        onClick: e => {\n          e.preventDefault();\n          darkMode === false ? setDarkMode(true) : setDarkMode(false);\n        },\n        children: darkMode === false ? /*#__PURE__*/_jsxDEV(ReactLogoMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(ReactLogoSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"itemInput\",\n        type: \"text\",\n        placeholder: \"Create a new todo...\",\n        maxLength: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","ReactLogoMoon","ReactLogoSun","Header","darkMode","setDarkMode","e","preventDefault"],"sources":["/Users/Zach/Desktop/todo-app-main/task-app/src/components/Header.jsx"],"sourcesContent":["import React, {useEffect,useState} from 'react';\nimport {ReactComponent as ReactLogoMoon} from '../images/icon-moon.svg';\nimport {ReactComponent as ReactLogoSun} from '../images/icon-sun.svg';\n\n\n\n\nconst Header = ()=>{\nconst [darkMode, setDarkMode]=useState(false);\n// useEffect(()=>{\n//     const body = document.body\n//     const items=document.querySelectorAll(\".item\");\n//     const deskToggle= document.querySelector(\".deskToggle\");\n//     const input= document.querySelector(\"input.itemInput\");\n//     const itemCount =document.querySelector(\".itemCount\");\n//     const toggle =document.querySelector(\".Toggles\");\n//     const attribute=document.querySelector(\".attribution\");\n//     const bgImage = document.querySelector('.header');\n\n\n//     if( darkMode === true ) {\n//       body.classList.add('darkModeBody')\n//       deskToggle.classList.add(\"darkmodeContent\");\n//       itemCount.classList.add(\"darkmodeContent\");\n//       toggle.classList.add(\"toggleDark\");\n//       input.classList.add(\"darkmodeInput\");\n//       attribute.classList.add(\"toggleDark\");\n//       bgImage.style.backgroundImage=`url('http://localhost:3000/static/media/bg-desktop-dark.73e47dbb723ebc772ef0.jpg')`\n//       items.forEach(element => {\n//         element.classList.add(\"darkmodeContent\");\n//       });\n\n//     } else {\n//       body.classList.remove('darkModeBody');\n//       input.classList.remove(\"darkmodeInput\");\n//       deskToggle.classList.remove(\"darkmodeContent\");\n//       input.classList.remove(\"darkmodeContent\");\n//       itemCount.classList.remove(\"darkmodeContent\");\n//       toggle.classList.remove(\"toggleDark\");\n//       attribute.classList.remove(\"toggleDark\");\n//       bgImage.style.backgroundImage=`url('http://localhost:3000/static/media/bg-desktop-light.3508d620efd5a52bb4ce.jpg')`;\n//       items.forEach(element => {\n//         element.classList.remove(\"darkmodeContent\");\n//       });\n\n//     }\n\n// }, [darkMode])\n\n    return (\n        <div className=\"header\">\n        <div className='heading'>\n        <h1>to do</h1>\n        <a href='null'\n         className='.icon'\n         onClick={(e)=>{\n            e.preventDefault();\n            darkMode === false ? setDarkMode(true) : setDarkMode(false)\n            }}\n         >\n\n        {darkMode===false?<ReactLogoMoon/>:<ReactLogoSun/>}\n        </a>\n        </div>\n        <div className='inputWrap'>\n        <input className='itemInput' type=\"text\" placeholder=\"Create a new todo...\" maxLength=\"50\"/>\n        </div>\n        </div>\n    )\n}\n\nexport default Header"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC/C,SAAQC,cAAc,IAAIC,aAAa,QAAO,yBAAyB;AACvE,SAAQD,cAAc,IAAIE,YAAY,QAAO,wBAAwB;AAAC;AAKtE,MAAMC,MAAM,GAAG,MAAI;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EAC7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEI,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACvB;MAAK,SAAS,EAAC,SAAS;MAAA,wBACxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd;QAAG,IAAI,EAAC,MAAM;QACb,SAAS,EAAC,OAAO;QACjB,OAAO,EAAGO,CAAC,IAAG;UACXA,CAAC,CAACC,cAAc,EAAE;UAClBH,QAAQ,KAAK,KAAK,GAAGC,WAAW,CAAC,IAAI,CAAC,GAAGA,WAAW,CAAC,KAAK,CAAC;QAC3D,CAAE;QAAA,UAGLD,QAAQ,KAAG,KAAK,gBAAC,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAE,gBAAC,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,uBAC1B;QAAO,SAAS,EAAC,WAAW;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,sBAAsB;QAAC,SAAS,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACtF;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GA9DKD,MAAM;AAAA,KAANA,MAAM;AAgEZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}