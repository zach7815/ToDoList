$primary:hsl(220, 98%, 61%);
$checkBg:linear-gradient( 45deg,#57ddff,#c058f3);

/*Light Theme Colors*/
$dayVLightGray:hsl(0, 0%, 98%);

$dayLightGrayBlue:hsl(233, 11%, 84%);
$dayGrayBlue:hsl(236, 9%, 61%);
$dayVGrayBlue:hsl(235, 19%, 35%);

/*Dark Theme Colors*/
$nightVBlue:hsl(235, 21%, 11%);
$nightVDesBlue:hsl(235, 24%, 19%);
//circle, crosses and dividing line accent color
$nightGrayBlue:hsl(234, 11%, 52%);
// todolist bg color
$nightVGrayBlue:hsl(233, 14%, 35%);
// background color main section
$nightExtrGrayBlue:hsl(237, 14%, 26%);

/*shared theme colour*/
$sharedVGrayBlue:hsl(236, 33%, 92%);

$fontFamily:"Josefin Sans",sans-serif;

/* background images variables*/
$mobDark:url('./images/bg-mobile-dark.jpg');
$mobLight:url('./images/bg-mobile-light.jpg');
$deskDark:url('./images/bg-desktop-dark.jpg');
$deskLight:url('./images/bg-desktop-light.jpg');

@mixin darkMode($bgColor:$nightVDesBlue){
  background-color:$bgColor;
  color:$dayVLightGray;

}


@mixin circle(
$border-color:$dayLightGrayBlue,
$inputCircle:false
) {
  border-color: $border-color;
  height: 1.5em;
  width: 1.5em;
  border-style: solid;
  border-width: 1px;
  border-radius: 50%;


  @if $inputCircle {
    position:absolute;
  top:4.85rem;
  left:3rem;
  }
  @else{
    position: initial;
  cursor: pointer;
  }

}


body{
  margin:0;
  padding:0;
  box-sizing: border-box;
  background-color:$dayVLightGray;

  font-family: $fontFamily;


}

.App{
  display: flex;
  flex-direction: column;
  align-items: center;
}


.header{
  h1{
    margin: 0;
    color: $dayVLightGray;
    text-transform: uppercase;
  }



  .heading{
    display: flex;
    justify-content: space-between;
    padding: 0 1rem 0 1rem;
    position: relative;
    top: 2rem;
    a {
      position: relative;
      z-index: 2;
      cursor: pointer;
      }

  }
  margin:0;
width: 100%;
height: 200px;
// background-image: $mobLight;
background-repeat: no-repeat;
background-size: cover;

.inputWrap{
  position: relative;




  input{
    background-color: $dayVLightGray;
    border: none;
    color:$dayVGrayBlue;
    border-radius: 5px;
    position: relative;
    padding-left: 3.5rem;
    left: 2rem;
    top:4rem;
    width: 67%;
    line-height: 3rem;
  }




}
}

.listContent{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: max-content;
  position: relative;
  bottom:2rem;
  color:$dayVGrayBlue;





  .item{
    background:$dayVLightGray;
    display: flex;
    justify-content:flex-start;
   align-content: center;
    width: 100%;
    position: relative;
    padding-left: 1rem;
    gap: 1rem;
    border-bottom: solid 1px $nightGrayBlue;

.checkbox{
  display: flex;
  justify-content: space-around;
  gap: 1rem;
  p{
    cursor: pointer;
  }
}

    .checkbox-round{
      width: 2em;
      height: 2em;
      border-radius: 50%;
      appearance: none;
      -webkit-appearance: none;
      outline: none;
      cursor: pointer;
      position: relative;
      top:0.5rem;
      border: 1px solid hsl(236, 9%, 61%);
    }

    input[type="checkbox"]:hover{
      border-color:#c058f3;
    }
    input[type="checkbox"]:checked {
      background: $checkBg;
      color: white;
    }


// sets tick element

    input[type="checkbox"]:after {
      content: ' ';
      position: relative;
      left: 40%;
      top: 20%;
      width: 15%;
      height: 40%;
      border: solid #fff;
      border-width: 0 2px 2px 0;
      transform: rotate(50deg);
      display: none;
    }

    input[type="checkbox"]:checked:after {
      display: block;
    }

    // sets strikethrough for item
    input[type=checkbox]:checked+p{
      text-decoration: line-through;
    }


    &.item:first-child{
      border-radius: 5px 5px 0 0;
    }

    .cross{
      fill:$nightGrayBlue;
      height: auto;
      width: auto;
      align-self: center;
      position: relative;
      left:3rem;
      top:1rem;
    }

  }
  .itemCount{
    width: 100%;
    background:$dayVLightGray;
    justify-content: flex-start;
    padding:1rem 0 1rem 1rem;
    text-transform: capitalize;
    display: flex;
    gap:4rem;
    border-radius: 0 0 5px 5px;
    a {
      cursor: pointer;
      }

  }
}

.Toggles{
  background:$dayVLightGray;
  color:$dayVGrayBlue;
  display: flex;
  justify-content: space-around;
  width: 74%;
  border-radius: 5px;
  padding: 1rem;
  span:hover{
    color:$primary;
    cursor: pointer;
  }
  span::active{
    color:$primary;

  }
}

.deskToggle{
background-color:$dayVLightGray;

color:$dayVGrayBlue;
display: flex;
justify-content: space-around;
padding: 1rem 0 1rem 0;
width: 100%;
gap:2rem;
max-width: 567.583px;
border-radius: 0 0 5px 5px;
display:none;
.filterBtn:hover{
 color:$primary;
 cursor: pointer;
}
.clearBtn{
  cursor: pointer;
}
}


.attribution{
  position: fixed;
  color: $dayVGrayBlue;
  font-size: 0.75rem;
  text-align: center;
  bottom:1rem;
  width: 50%;
  a{
    color: $primary;
  }
}

@media screen and (min-width:1439px) {
.header{
  background-image:$deskLight;
  .heading{
    justify-content: center;
    top:3rem;
  gap:27rem;
  }

  .inputWrap{
    display: flex;
    justify-content: center;
    input{
      width: 35%;
      max-width: 511px;
      left: 0%;
      right:1rem;
    }


}

}
.listContent{
  box-shadow: 0px 2px 15px 0 black;
border-radius: 5px;
margin: 0 0 5rem 0;
position: relative;
z-index: 5;
  .item{
    width: 34rem;
    max-width:552.317px;
    display: flex;
justify-content: flex-start;
gap: 1rem;



.crossContainer{
  position: relative;
  display: none;
  top:1rem;
  left:19rem;
  .cross{
    top:0;
    left:0;
  }
}

&:hover{
  a{
  display: block;
  }
}

  }
  .itemCount{
    display:none;
  }
}

.Toggles{
  display: none;
}
.deskToggle{
  display: flex;
}

}


/* classes for Lightmode*/

.darkModeBody{
  background-color:$nightVBlue;

}
.header{

  .inputWrap{
    .darkmodeInput{
      background-color: hsl(235, 24%, 19%);

      color:$dayVLightGray;
    }
  }

}

.listContent{
  .darkmodeContent{
    background-color:$nightVDesBlue;
    color:$dayVLightGray;

  }

}

.toggleDark{
 @include darkMode(transparent)
}



